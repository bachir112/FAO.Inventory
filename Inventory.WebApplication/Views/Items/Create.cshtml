@using Inventory.DataObjects.DTO
@using Inventory.DataObjects.EDM

@model Inventory.DataObjects.EDM.Item

@{
    ViewBag.Title = "Create";
    List<CategoryDTO> categoriesList = ViewBag.CategoriesList as List<CategoryDTO>;
    List<Supplier> suppliersList = ViewBag.SuppliersList as List<Supplier>;
    List<AvailabilityStatu> availabilityStatusList = ViewBag.AvailabilityStatusList as List<AvailabilityStatu>;
    List<ItemStatu> itemStatusList = ViewBag.ItemStatusList as List<ItemStatu>;
    List<Unit> unitList = ViewBag.UnitList as List<Unit>;
}

<link href="@Url.Content("~/assets/wizard/gsdk-bootstrap-wizard.css")" rel="stylesheet" />
<link href="@Url.Content("~/assets/wizard/demo.css")" rel="stylesheet" />

<style type="text/css">

    .wizard-card .choice .icon {
        background-color: white;
    }

    .wizard-card .choice img {
        margin: 29px;
    }

    .wizard-card .choice {
        height: 200px;
        overflow: hidden;
    }

    .select2-container .select2-selection--single {
        background-color: #fff;
        border: 1px solid #aaa;
        border-top-color: rgb(170, 170, 170);
        border-top-style: solid;
        border-top-width: 1px;
        border-right-color: rgb(170, 170, 170);
        border-right-style: solid;
        border-right-width: 1px;
        border-bottom-color: rgb(170, 170, 170);
        border-bottom-style: solid;
        border-bottom-width: 1px;
        border-left-color: rgb(170, 170, 170);
        border-left-style: solid;
        border-left-width: 1px;
        border-image-source: initial;
        border-image-slice: initial;
        border-image-width: initial;
        border-image-outset: initial;
        border-image-repeat: initial;
        border-radius: 4px;
        border-top-left-radius: 4px;
        border-top-right-radius: 4px;
        border-bottom-right-radius: 4px;
        border-bottom-left-radius: 4px;
    }

    .select2-container .select2-selection--single .select2-selection__arrow {
        height: 26px;
        position: absolute;
        top: 1px;
        right: 1px;
        width: 20px;
    }


    .select2-container .select2-selection--single .select2-selection__arrow b {
        border-color: #888 transparent transparent transparent;
        border-style: solid;
        border-width: 5px 4px 0 4px;
        height: 0;
        left: 50%;
        margin-left: -4px;
        margin-top: -2px;
        position: absolute;
        top: 50%;
        width: 0;
    }

    .select2-container .select2-selection--single .select2-selection__rendered {
        color: #444;
        line-height: 28px;
    }

    .select2-container .select2-results__option--highlighted[aria-selected] {
        background-color: #5897fb;
        color: white;
    }

    .select2-results__options{
        max-height:150px;
        overflow:auto;
    }

    .select2-selection__clear {
        display: none;
    }
</style>

<div class="page-content-wrapper">
    <div class="page-content">
        <div class="theme-panel hidden-xs hidden-sm">
            <div class="toggler"> </div>
            <div class="toggler-close"> </div>
            <div class="theme-options">
                <div class="theme-option theme-colors clearfix">
                    <span> THEME COLOR </span>
                    <ul>
                        <li class="color-default current tooltips" data-style="default" data-container="body" data-original-title="Default"> </li>
                        <li class="color-darkblue tooltips" data-style="darkblue" data-container="body" data-original-title="Dark Blue"> </li>
                        <li class="color-blue tooltips" data-style="blue" data-container="body" data-original-title="Blue"> </li>
                        <li class="color-grey tooltips" data-style="grey" data-container="body" data-original-title="Grey"> </li>
                        <li class="color-light tooltips" data-style="light" data-container="body" data-original-title="Light"> </li>
                        <li class="color-light2 tooltips" data-style="light2" data-container="body" data-html="true" data-original-title="Light 2"> </li>
                    </ul>
                </div>
            </div>
        </div>
        <h1 class="page-title"> Items </h1>
        <div class="page-bar">
            <ul class="page-breadcrumb">
                <li>
                    <a href="index.html">Create</a>
                    <i class="fa fa-angle-right"></i>
                </li>
                <li>
                    <span>New Item in Stock</span>
                </li>
            </ul>
        </div>
        @*Content starts here*@
        <div class="form-horizontal">
            <div class="wizard-container">
                <div class="card wizard-card" data-color="green" id="wizard">
                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()
                        <div class="wizard-navigation">
                            <ul class="nav nav-pills">
                                <li class="active" style="width: 25%;">
                                    <a href="#Categories" data-toggle="tab">Categories</a>
                                </li>
                                <li style="width: 25%;">
                                    <a href="#item" data-toggle="tab">Item</a>
                                </li>
                                <li style="width: 25%;">
                                    <a href="#details" data-toggle="tab">Details</a>
                                </li>
                            </ul>
                            <div class="moving-tab" style="width: 187.5px; transform: translate3d(0px, 0px, 0px); transition: transform 0s ease 0s;">Location</div>
                        </div>

                        <div class="tab-content">
                            <div class="tab-pane active" id="Categories">
                                <h4 class="info-text"> What category does this item belong to? </h4>
                                <div class="row">
                                    <div class="col-sm-10 col-sm-offset-1">
                                        @{
                                            foreach (CategoryDTO category in categoriesList)
                                            {
                                                <div class="col-sm-4">
                                                    <div class="choice category btn-next" data-categoryID="@category.Id" data-toggle="wizard-radio" rel="tooltip" title="" data-original-title="Select this option if @category.Name.">
                                                        <div class="icon">
                                                            <img src="@Url.Content("~/images/" + category.Picture)" style="width:50px;margin:29px;" />
                                                        </div>
                                                        <h6>@category.Name</h6>
                                                    </div>
                                                </div>
                                            }
                                        }
                                    </div>
                                </div>
                            </div>
                            <div class="tab-pane" id="item">
                                <h4 class="info-text"> Items under this category. </h4>
                                <div class="row">
                                    <div class="col-sm-5 col-sm-offset-1">
                                        <div class="form-group">
                                            <label>Select from this list</label>
                                            <select id="itemsInCategory" style="width:100%;" class="form-control">
                                                <option></option>
                                            </select>
                                        </div>
                                    </div>
                                </div>
                                <h4 class="info-text">
                                    <a id="toggleAddNewItemContainer">Couldn't find it?</a>
                                </h4>
                                <div id="addNewItemContainer" class="row" style="display:none;">
                                    <div class="col-sm-5 col-sm-offset-1">
                                        <div class="form-group">
                                            <label>Add it here</label>
                                            <input id="newSearchableItem" type="text" class="form-control" />
                                        </div>
                                    </div>
                                    <div class="col-sm-5 col-sm-offset-1">
                                        <div class="form-group">
                                            <label style="width:100%;"></label>
                                            <a id="addToSearchable" class="btn btn-success">Add</a>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="tab-pane" id="details">
                                <div class="row">
                                    <h4 class="info-text"> Write down the final details. </h4>
                                    <div class="col-sm-12">
                                        <div class="form-horizontal">
                                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                            <div class="form-group">
                                                <label class="control-label col-md-2" for="Name">Item Name</label>
                                                <div class="col-md-10">
                                                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @id = "itemName", @class = "form-control", @readonly = "readonly" } })
                                                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                                </div>
                                            </div>

                                            <div class="form-group">
                                                <label class="control-label col-md-2" for="AvailabilityStatusID">Availability Status</label>
                                                <div class="col-md-10">
                                                    @Html.DropDownListFor(m => m.AvailabilityStatusID, new SelectList(availabilityStatusList, "Id", "Status"), new { @name = "AvailabilityStatusID", @id = "availabilityStatus", @style = "width:100%;" })
                                                    @Html.ValidationMessageFor(model => model.AvailabilityStatusID, "", new { @class = "text-danger" })
                                                </div>
                                            </div>

                                            <div class="form-group">
                                                <label class="control-label col-md-2" for="ItemStatusID">Item Status</label>
                                                <div class="col-md-10">
                                                    @Html.DropDownListFor(m => m.ItemStatusID, new SelectList(itemStatusList, "Id", "Status"), new { @name = "ItemStatusID", @id = "itemStatusID", @style = "width:100%;" })
                                                    @Html.ValidationMessageFor(model => model.ItemStatusID, "", new { @class = "text-danger" })
                                                </div>
                                            </div>

                                            <div class="form-group">
                                                <label class="control-label col-md-2" for="LocationInStock">Location In Stock</label>
                                                <div class="col-md-10">
                                                    @Html.EditorFor(model => model.LocationInStock, new { htmlAttributes = new { @class = "form-control" } })
                                                    @Html.ValidationMessageFor(model => model.LocationInStock, "", new { @class = "text-danger" })
                                                </div>
                                            </div>

                                            <div class="form-group">
                                                <label class="control-label col-md-2" for="UnitID">Unit</label>
                                                <div class="col-md-10">
                                                    @Html.DropDownListFor(m => m.UnitID, new SelectList(unitList, "Id", "Name"), new { @name = "UnitID", @id = "unitID", @style = "width:100%;" })
                                                    @Html.ValidationMessageFor(model => model.UnitID, "", new { @class = "text-danger" })
                                                </div>
                                            </div>

                                            <div class="form-group">
                                                <label class="control-label col-md-2" for="UnitAmount">Amount</label>
                                                <div class="col-md-10">
                                                    @Html.EditorFor(model => model.UnitAmount, new { htmlAttributes = new { @class = "form-control" } })
                                                    @Html.ValidationMessageFor(model => model.UnitAmount, "", new { @class = "text-danger" })
                                                </div>
                                            </div>

                                            <div id="quantityContainer" style="display:none;" class="form-group">
                                                <label class="control-label col-md-2" for="UnitID">How many?</label>
                                                <div class="col-md-10">
                                                    <input class="form-control text-box single-line valid" data-val="true" data-val-number="The field Quantity must be a number." data-val-required="Quantity is required." id="Quantity" name="Quantity" type="text" value="" aria-invalid="false">
                                                    @Html.ValidationMessageFor(model => model.UnitID, "", new { @class = "text-danger" })
                                                </div>
                                            </div>

                                            <div class="form-group">
                                                <label class="control-label col-md-2" for="ExpiryDate">Expiry Date</label>
                                                <div class="col-md-10">
                                                    <input id="expiryDate" name="ExpiryDate" style="width:100%!important;" class="form-control form-control-inline input-medium date-picker" size="16" type="text" value="">
                                                    @Html.ValidationMessageFor(model => model.ExpiryDate, "", new { @class = "text-danger" })
                                                </div>
                                            </div>

                                            <div class="form-group">
                                                <label class="control-label col-md-2" for="Description">Item Description</label>
                                                <div class="col-md-10">
                                                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                                                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                                                </div>
                                            </div>

                                            <div style="display:none;" class="form-group">
                                                <label class="control-label col-md-2" for="Price">Item Price</label>
                                                <div class="col-md-10">
                                                    <input class="form-control text-box single-line" data-val="true" data-val-number="The field Price must be a number." id="Price" name="Price" type="number" value="">
                                                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                                                </div>
                                            </div>

                                            <div class="form-group">
                                                <label class="control-label col-md-2" for="SupplierID">Supplier</label>
                                                <div class="col-md-10">
                                                    @Html.DropDownListFor(m => m.SupplierID, new SelectList(suppliersList, "Id", "Supplier1"), new { @name = "SupplierID", @id = "supplierID", @style = "width:100%;" })
                                                    @*@Html.EditorFor(model => model.SupplierID, new { htmlAttributes = new { @id = "SupplierID", @class = "form-control" } })*@
                                                    @Html.ValidationMessageFor(model => model.SupplierID, "", new { @class = "text-danger" })
                                                </div>
                                            </div>

                                            <div style="display:none;" class="form-group">
                                                <label class="control-label col-md-2" for="CategoryID">Category</label>
                                                <div class="col-md-10">
                                                    @Html.EditorFor(model => model.CategoryID, new { htmlAttributes = new { @id = "categoryID", @class = "form-control" } })
                                                    @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="wizard-footer">
                            <div class="pull-right">
                                <input type="button" class="btn btn-next btn-fill btn-success btn-wd btn-sm" name="next" value="Next">
                                <input type="submit" class="btn btn-finish btn-fill btn-success btn-wd btn-sm" name="finish" value="Create" style="display: none;">

                            </div>
                            <div class="pull-left">
                                <input type="button" class="btn btn-previous btn-fill btn-default btn-wd btn-sm disabled" name="previous" value="Previous">
                            </div>
                            <div class="clearfix"></div>
                        </div>

                    }
                </div>
            </div>
        </div>
        @*Content ends here*@
    </div>
</div>

<script src="@Url.Content("~/assets/wizard/jquery.bootstrap.wizard.js")" type="text/javascript"></script>
<script src="@Url.Content("~/assets/wizard/gsdk-bootstrap-wizard.js")"></script>
<script src="@Url.Content("~/assets/wizard/jquery.validate.min.js")"></script>

<script type="text/javascript">

    var categoryID = -1;

    $(document).ready(function () {

        //$("#expiryDate").datepicker("setDate", new Date());

        $('#toggleAddNewItemContainer').click(function () {
            $('#addNewItemContainer').toggle();
        });
        
        $('#itemsInCategory').select2({
            placeholder: "Select Item"
        });

        $('#availabilityStatus').select2();
        $('#itemStatusID').select2();
        $('#supplierID').select2();
        $('#unitID').select2();

        $('#unitID').change(function () {

            var unitValue = $(this).val();
            if (unitValue != 1) {
                $('#quantityContainer').show();
            } else {
                $('#quantityContainer').hide();
            }

        });

        $('#addToSearchable').click(function () {

            var newSearchableItem = $('#newSearchableItem').val();

            $.ajax({
                type: "GET",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                url: '@Url.Action("AddItemToSearchble", "Home")',
                data:
                {
                    itemName: newSearchableItem,
                    categoryID: categoryID
                },
                success: function (data)
                {
                    getItemsInCategory(newSearchableItem);
                    $('#addNewItemContainer').hide();
                    console.log(data);
                },
                error: function () {
                    console.log('error');
                }
            });
        });

        $('.choice.category').click(function () {

            categoryID = $(this).attr('data-categoryID');

            $('#categoryID').val(categoryID);
            getItemsInCategory();

        });

        $('#itemsInCategory').change(function () {

            var itemName = $(this).val();
            $('#itemName').val(itemName);

        });

        function getItemsInCategory(selectedItem) {

            $('#itemsInCategory').select2('destroy');
            $('#itemsInCategory').html('');

            $.ajax({
                type: "GET",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                url: '@Url.Action("ItemsInCategory", "Home")',
                data:
                {
                    categoryID: categoryID
                },
                success: function (data)
                {
                    console.log(data);

                    var htmlOptions = '<option></option>';

                    $.each(data, function (k, v) {
                        console.log('v = ' + v);
                        htmlOptions += '<option value="' + v + '">' + v + '</option>';
                    });

                    $('#itemsInCategory').append(htmlOptions);

                    $('#itemsInCategory').select2({
                        placeholder: 'Select Item',
                        allowClear: true
                    });

                    $('#itemsInCategory').val(selectedItem).trigger('change');
                },
                error: function () {
                    console.log('error');
                }
            });
        }

    });

</script>